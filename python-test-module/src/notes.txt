I learned how to make command line set up virtual environment for venv, command line this: ../venv/Scripts/activate.bat

link to useful info: https://google.github.io/mediapipe/solutions/hands

# for path in IMAGE_FILES:
#     image = cv2.flip(cv2.imread(path), 1)
#     cv2.imshow(path, image)
#     with mp_hands.Hands(
#         static_image_mode=True,
#         max_num_hands=1,
#         min_detection_confidence=0.5) as hands:
#         # Read an image, flip it around y-axis for correct handedness output (see
#         # above).
#         # Convert the BGR image to RGB before processing.
#         rgbimage = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
#         results = hands.process(rgbimage)
#
#
#         # Print handedness and draw hand landmarks on the image.
#         print('Handedness:', results.multi_handedness)
#         image_height, image_width, _ = image.shape
#         annotated_image = image.copy()
#         hand_landmarks = results.multi_hand_landmarks[0]
#         # mp_drawing.draw_landmarks(
#         #     rgbimage,
#         #     hand_landmarks,
#         #     mp_hands.HAND_CONNECTIONS,
#         #     mp_drawing_styles.get_default_hand_landmarks_style(),
#         #     mp_drawing_styles.get_default_hand_connections_style())
#         for hand_world_landmarks in results.multi_hand_world_landmarks:
#             mp_drawing.plot_landmarks(
#                 hand_world_landmarks, mp_hands.HAND_CONNECTIONS, azimuth=5)
#         for hand_landmarks in results.multi_hand_landmarks:
#             print('hand_landmarks:', hand_landmarks)
#             print(
#                 f'Index finger tip coordinates: (',
#                 f'{hand_landmarks.landmark[mp_hands.HandLandmark.INDEX_FINGER_TIP].x * image_width}, '
#                 f'{hand_landmarks.landmark[mp_hands.HandLandmark.INDEX_FINGER_TIP].y * image_height})'
#             )
#             mp_drawing.draw_landmarks(
#                 annotated_image,
#                 hand_landmarks,
#                 mp_hands.HAND_CONNECTIONS,
#                 mp_drawing_styles.get_default_hand_landmarks_style(),
#                 mp_drawing_styles.get_default_hand_connections_style())
#         # Draw hand world landmarks.
#         for hand_world_landmarks in results.multi_hand_world_landmarks:
#             mp_drawing.plot_landmarks(
#                 hand_world_landmarks, mp_hands.HAND_CONNECTIONS, azimuth=5)
#
# for results in resultsList:
#     mp_drawing.draw_landmarks(
#         annotated_image,
#         hand_landmarks,
#         mp_hands.HAND_CONNECTIONS,
#         mp_drawing_styles.get_default_hand_landmarks_style(),
#         mp_drawing_styles.get_default_hand_connections_style())
#     for hand_world_landmarks in results.multi_hand_world_landmarks:
#         mp_drawing.plot_landmarks(
#             hand_world_landmarks, mp_hands.HAND_CONNECTIONS, azimuth=5)
#
